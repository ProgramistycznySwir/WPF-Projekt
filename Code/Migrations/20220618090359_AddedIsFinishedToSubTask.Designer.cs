// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPF_Project.Data;

#nullable disable

namespace WPF_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220618090359_AddedIsFinishedToSubTask")]
    partial class AddedIsFinishedToSubTask
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("BoardTaskTag", b =>
                {
                    b.Property<Guid>("TagsID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TasksID")
                        .HasColumnType("TEXT");

                    b.HasKey("TagsID", "TasksID");

                    b.HasIndex("TasksID");

                    b.ToTable("BoardTaskTag");
                });

            modelBuilder.Entity("WPF_Project.Models.Database.BoardColumn", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "To Do"
                        },
                        new
                        {
                            ID = 2,
                            Name = "In Progress"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Done"
                        });
                });

            modelBuilder.Entity("WPF_Project.Models.Database.BoardTask", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Column_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Column_ID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("WPF_Project.Models.Database.SubTask", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Task_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Task_ID");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("WPF_Project.Models.Database.Tag", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Color_A")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Color_B")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Color_G")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Color_R")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            ID = new Guid("d58f15b0-c515-45b4-93fb-db9db0f16236"),
                            Color_A = (byte)0,
                            Color_B = (byte)0,
                            Color_G = (byte)0,
                            Color_R = (byte)0,
                            Name = "School"
                        },
                        new
                        {
                            ID = new Guid("ded28ec5-b198-4b0b-89c1-e3edec9593b3"),
                            Color_A = (byte)0,
                            Color_B = (byte)0,
                            Color_G = (byte)0,
                            Color_R = (byte)0,
                            Name = "Project"
                        },
                        new
                        {
                            ID = new Guid("95d8e949-76e6-4aa4-b695-1225fcfdd1c5"),
                            Color_A = (byte)0,
                            Color_B = (byte)0,
                            Color_G = (byte)0,
                            Color_R = (byte)0,
                            Name = "Exercise"
                        },
                        new
                        {
                            ID = new Guid("b5ed1070-5d31-47a5-86cc-751ffe8ab3de"),
                            Color_A = (byte)0,
                            Color_B = (byte)0,
                            Color_G = (byte)0,
                            Color_R = (byte)0,
                            Name = "Shopping"
                        });
                });

            modelBuilder.Entity("BoardTaskTag", b =>
                {
                    b.HasOne("WPF_Project.Models.Database.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPF_Project.Models.Database.BoardTask", null)
                        .WithMany()
                        .HasForeignKey("TasksID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPF_Project.Models.Database.BoardTask", b =>
                {
                    b.HasOne("WPF_Project.Models.Database.BoardColumn", "Column")
                        .WithMany("Tasks")
                        .HasForeignKey("Column_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");
                });

            modelBuilder.Entity("WPF_Project.Models.Database.SubTask", b =>
                {
                    b.HasOne("WPF_Project.Models.Database.BoardTask", "Task")
                        .WithMany("SubTasks")
                        .HasForeignKey("Task_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("WPF_Project.Models.Database.BoardColumn", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("WPF_Project.Models.Database.BoardTask", b =>
                {
                    b.Navigation("SubTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
